version: '3'

networks:
  laravel:

services:

  front:
    build:
      context: .
      dockerfile: vue.dockerfile
    container_name: front
    volumes:
      - ../basis-front:/app
      - ../basis-front/node_modules:/app/node_modules
    working_dir: /app
    ports:
      - 8081:8080
    command: [ "yarn", "serve" ]
    networks:
      - laravel

  api:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: api
    ports:
      - 80:80
    volumes:
      - ../basis-api:/var/www/html/basis-api:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: basis
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ../basis-api:/var/www/html/basis-api:delegated
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ../basis-api:/var/www/html/basis-api
    working_dir: /var/www/html/basis-api
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer']
    networks:
      - laravel
      
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ../basis-api:/var/www/html/basis-api:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html/basis-api
    user: laravel
    entrypoint: ['php', '/var/www/html/basis-api/artisan']
    networks:
      - laravel

networks:
  laravel:
    driver: bridge
    
volumes:
  dbdata:
    driver: local